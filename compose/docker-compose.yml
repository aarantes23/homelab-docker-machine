version: "3.7"

networks:

  default:
    driver: bridge
  traefik_proxy:
    driver: bridge
  mariadb:
    external: true

secrets:

  htpasswd:
    file: /mnt/hdd-0/HDD/secrets/htpasswd
  cloudflare_email:
    file: /mnt/hdd-0/HDD/secrets/cloudflare_email
  cloudflare_api_key:
    file: /mnt/hdd-0/HDD/secrets/cloudflare_api_key
  authelia_jwt_secret:
    file: /mnt/hdd-0/HDD/secrets/authelia_jwt_secret
  authelia_session_secret:
    file: /mnt/hdd-0/HDD/secrets/authelia_session_secret
  authelia_storage_mysql_password:
    file: /mnt/hdd-0/HDD/secrets/authelia_storage_mysql_password
  authelia_notifier_smtp_password:
    file: /mnt/hdd-0/HDD/secrets/authelia_notifier_smtp_password
  mysql_root_password:
    file: /mnt/hdd-0/HDD/secrets/mysql_root_password
  mail_passwd:
    file: /mnt/hdd-0/HDD/secrets/mail_passwd

services:

  traefik:
    image: traefik:v2.3
    container_name: traefik
    hostname: container_traefik
    restart: unless-stopped
    networks:
      - default
      - traefik_proxy
    ports:
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/extra/acme.json:/acme.json
      - /mnt/hdd-0/HDD/config/traefik/letsencrypt:/letsencrypt
      - /mnt/hdd-0/HDD/config/traefik/traefik.yml:/etc/traefik/traefik.yml
      - /mnt/hdd-0/HDD/config/traefik/traefik.log:/traefik.log
      - /mnt/hdd-0/HDD/config/traefik/rules.yml:/rules.yml
      - /mnt/hdd-0/HDD/secrets/htpasswd:/htpasswd
    secrets:
      - cloudflare_email
      - cloudflare_api_key
      - htpasswd
    environment:
      - CF_API_EMAIL=/run/secrets/cloudflare_email
      - CF_API_KEY=/run/secrets/cloudflare_api_key
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.$DOMAINNAME`)"
      - "traefik.http.routers.traefik.service=traefik"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik.middlewares=chain-authelia@file"

  authelia:
    image: authelia/authelia
    container_name: authelia
    hostname: container_authelia
    restart: unless-stopped
    depends_on: 
      - mariadb     
    networks:
      - traefik_proxy
    expose: 
      - 9091
    volumes:
      - /mnt/hdd-0/HDD/config/authelia:/config
    secrets:
      - authelia_jwt_secret
      - authelia_session_secret
      - authelia_storage_mysql_password
      - authelia_notifier_smtp_password
    environment:
      - PUID=$PUID
      - PGID=$PGID 
      - TZ=$TZ
      - AUTHELIA_JWT_SECRET_FILE=/run/secrets/authelia_jwt_secret
      - AUTHELIA_SESSION_SECRET_FILE=/run/secrets/authelia_session_secret
      - AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE=/run/secrets/authelia_storage_mysql_password
      - AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE=/run/secrets/authelia_notifier_smtp_password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authelia-rtr.entrypoints=websecure"
      - "traefik.http.routers.authelia-rtr.rule=Host(`authelia.$DOMAINNAME`)"
      - "traefik.http.routers.authelia-rtr.service=authelia-svc"
      - "traefik.http.services.authelia-svc.loadbalancer.server.port=9091"      
      - "traefik.http.routers.authelia-rtr.tls.certresolver=myresolver"
      - "traefik.http.routers.authelia-rtr.middlewares=chain-authelia@file"
      - "traefik.docker.network=traefik_proxy"

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    hostname: Docker-Machine
    restart: unless-stopped
    networks:
      - default        
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    secrets:
      - mail_passwd       
    environment:
      - TZ=$TZ
      - WATCHTOWER_CLEANUP=True
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=$SMTP_USERNAME
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=$EMAIL
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=$SMTP_HOST
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=587
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=$SMTP_USERNAME
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=/run/secrets/mail_passwd
      - WATCHTOWER_NOTIFICATION_EMAIL_DELAY=2            
    command: --interval 30

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    hostname: container_portainer
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    networks:
      - traefik_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/hdd-0/HDD/config/portainer:/data
    environment:
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.$DOMAINNAME`)"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"
      - "traefik.http.routers.portainer.middlewares=chain-authelia@file"
      - "traefik.docker.network=traefik_proxy"

  heimdall:
    image: ghcr.io/linuxserver/heimdall
    container_name: heimdall
    hostname: container_heimdall
    restart: unless-stopped
    networks:
      - traefik_proxy
    volumes:
      - /mnt/hdd-0/HDD/config/heimdall:/config
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.rule=Host(`heimdall.$DOMAINNAME`)"
      - "traefik.http.routers.heimdall.service=heimdall"
      - "traefik.http.services.heimdall.loadbalancer.server.port=80"
      - "traefik.http.routers.heimdall.entrypoints=websecure"
      - "traefik.http.routers.heimdall.tls.certresolver=myresolver"
      - "traefik.http.routers.heimdall.middlewares=chain-authelia@file"
      - "traefik.docker.network=traefik_proxy"      

  tautulli:
    image: ghcr.io/linuxserver/tautulli
    container_name: tautulli
    hostname: container_tautulli
    restart: unless-stopped
    networks:
      - traefik_proxy
    volumes:
      - /mnt/hdd-0/HDD/config/tautulli:/config
      - /mnt/hdd-0/HDD/config/plex/Library/Application Support/Plex Media Server/Logs:/logs
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
       - "traefik.enable=true"
       - "traefik.http.routers.tautulli.rule=Host(`tautulli.$DOMAINNAME`)"
       - "traefik.http.routers.tautulli.service=tautulli"
       - "traefik.http.services.tautulli.loadbalancer.server.port=8181"
       - "traefik.http.routers.tautulli.entrypoints=websecure"
       - "traefik.http.routers.tautulli.tls.certresolver=myresolver"
       - "traefik.http.routers.tautulli.middlewares=chain-authelia@file"
       - "traefik.docker.network=traefik_proxy"

  jackett:
    image: ghcr.io/linuxserver/jackett
    container_name: jackett
    hostname: container_jackett
    restart: unless-stopped
    networks:
      - traefik_proxy
    volumes:
      - /mnt/hdd-0/HDD/config/jackett:/config
      - /mnt/hdd-1/HDD/Downloads:/downloads
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - AUTO_UPDATE=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.rule=Host(`jackett.$DOMAINNAME`)"
      - "traefik.http.routers.jackett.service=jackett"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
      - "traefik.http.routers.jackett.entrypoints=websecure"
      - "traefik.http.routers.jackett.tls.certresolver=myresolver"
      - "traefik.http.routers.jackett.middlewares=chain-authelia@file"
      - "traefik.docker.network=traefik_proxy"

  qbittorrent:
    image: ghcr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    hostname: container_qbittorrent
    restart: unless-stopped
    networks:
      - default
      - traefik_proxy
    ports:
      - 8090:8090
      - 51413:51413
      - 51413:51413/udp
    volumes:
      - /mnt/hdd-0/HDD/config/qbittorrent:/config
      - /mnt/hdd-1/HDD/Downloads:/downloads
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=022
      - WEBUI_PORT=8090

  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    hostname: container_sonarr
    restart: unless-stopped
    networks:
      - traefik_proxy  
    volumes:
      - /mnt/hdd-0/HDD/config/sonarr:/config
      - /mnt/hdd-1/HDD/Media/Tv:/tv
      - /mnt/hdd-1/HDD/Downloads:/downloads
      - /mnt/hdd-2/HDD/Media/Tv:/tv-hdd-pm
      - /mnt/blackarmor-nas-hdd-1:/blackarmor-nas-hdd-1
      - /mnt/blackarmor-nas-hdd-2:/blackarmor-nas-hdd-2
      - /mnt/blackarmor-nas-hdd-3:/blackarmor-nas-hdd-3
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=022
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.$DOMAINNAME`)"
      - "traefik.http.routers.sonarr.service=sonarr"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
      - "traefik.http.routers.sonarr.middlewares=chain-authelia@file"
      - "traefik.docker.network=traefik_proxy"

  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    hostname: container_radarr
    restart: unless-stopped
    networks:
      - traefik_proxy
    volumes:
      - /mnt/hdd-0/HDD/config/radarr:/config
      - /mnt/hdd-1/HDD/Media/Movies:/movies
      - /mnt/hdd-1/HDD/Downloads:/downloads
      - /mnt/hdd-2/HDD/Media/Tv:/movies-hdd-pm
      - /mnt/blackarmor-nas-hdd-1:/blackarmor-nas-hdd-1
      - /mnt/blackarmor-nas-hdd-2:/blackarmor-nas-hdd-2
      - /mnt/blackarmor-nas-hdd-3:/blackarmor-nas-hdd-3
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=022
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.$DOMAINNAME`)"
      - "traefik.http.routers.radarr.service=radarr"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"
      - "traefik.http.routers.radarr.middlewares=chain-authelia@file"
      - "traefik.docker.network=traefik_proxy"

  bazarr:
    image: ghcr.io/linuxserver/bazarr
    container_name: bazarr
    hostname: container_bazarr
    restart: unless-stopped    
    networks:
      - traefik_proxy
    volumes:
      - /mnt/hdd-0/HDD/config/sonarr:/config
      - /mnt/hdd-1/HDD/Media/Tv:/tv
      - /mnt/hdd-2/HDD/Media/Tv:/tv-hdd-pm
      - /mnt/blackarmor-nas-hdd-1:/blackarmor-nas-hdd-1
      - /mnt/blackarmor-nas-hdd-2:/blackarmor-nas-hdd-2
      - /mnt/blackarmor-nas-hdd-3:/blackarmor-nas-hdd-3
      - /mnt/hdd-1/HDD/Media/Movies:/movies
      - /mnt/hdd-2/HDD/Media/Tv:/movies-hdd-pm      
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.$DOMAINNAME`)"
      - "traefik.http.routers.bazarr.service=bazarr"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls.certresolver=myresolver"
      - "traefik.http.routers.bazarr.middlewares=chain-authelia@file"
      - "traefik.docker.network=traefik_proxy"      

  plex:
    image: ghcr.io/linuxserver/plex
    container_name: plex
    hostname: Docker-Machine
    restart: unless-stopped
    network_mode: host
    volumes:
      - /mnt/hdd-0/HDD/config/plex:/config
      - /mnt/hdd-1/HDD/Media/Tv:/tv
      - /mnt/hdd-1/HDD/Media/Movies:/movies
      - /mnt/hdd-2/HDD/Media/Tv:/tv-hdd-pm
      - /mnt/hdd-2/HDD/Media/Movies:/movies-hdd-pm
      - /mnt/blackarmor-nas-hdd-1:/blackarmor-nas-hdd-1
      - /mnt/blackarmor-nas-hdd-2:/blackarmor-nas-hdd-2
      - /mnt/blackarmor-nas-hdd-3:/blackarmor-nas-hdd-3
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=022
      - VERSION=docker

  tasmoadmin:
    image: raymondmm/tasmoadmin
    container_name: tasmoadmin
    hostname: container_tasmoadmin
    restart: unless-stopped
    networks:
      - default
    ports:
      - 9541:80
    volumes:
      - /mnt/hdd-0/HDD/config/tasmoadmin:/data

  openspeedtest:
    image: openspeedtest/latest
    container_name: openspeedtest
    hostname: container_openspeedtest
    restart: unless-stopped
    networks:
      - default
    ports:
      - 80:8080

  mariadb:
    image: ghcr.io/linuxserver/mariadb
    container_name: mariadb
    hostname: container_mariadb
    restart: unless-stopped
    networks:
      - traefik_proxy
      - mariadb
    ports:
      - 3306:3306     
    volumes:
      - /mnt/hdd-0/HDD/config/mariadb:/config
    secrets:
      - mysql_root_password
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - MYSQL_ROOT_PASSWORD=/run/secrets/mysql_root_password
      - MYSQL_USER=''
      - MYSQL_PASSWORD=''

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    hostname: container_phpmyadmin
    restart: unless-stopped
    networks:
      - traefik_proxy
    depends_on: 
      - mariadb
    links:
      - mariadb:db
    secrets:
      - mysql_root_password
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mariadb
      - MYSQL_ROOT_PASSWORD=/run/secrets/mysql_root_password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.$DOMAINNAME`)"
      - "traefik.http.routers.phpmyadmin.service=phpmyadmin"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.phpmyadmin.entrypoints=websecure"
      - "traefik.http.routers.phpmyadmin.tls.certresolver=myresolver"
      - "traefik.http.routers.phpmyadmin.middlewares=chain-authelia@file"
      - "traefik.docker.network=traefik_proxy"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: container_grafana
    restart: unless-stopped
    networks:
      - traefik_proxy
    volumes:
      - /mnt/hdd-0/HDD/config/grafana:/var/lib/grafana
    user: $PUID      
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.$DOMAINNAME`)"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.routers.grafana.middlewares=chain-authelia@file"
      - "traefik.docker.network=traefik_proxy"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: container_prometheus
    restart: unless-stopped
    networks: 
      - traefik_proxy
    volumes:
      - /mnt/hdd-0/HDD/config/prometheus/etc:/etc/prometheus
      - /mnt/hdd-0/HDD/config/prometheus:/prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.$DOMAINNAME`)"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.routers.prometheus.middlewares=chain-authelia@file"
      - "traefik.docker.network=traefik_proxy"